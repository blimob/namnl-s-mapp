<div class="login-container">
  <h1 style="text-align: center; color: #2e6e65; margin-bottom: 2rem;">Styrelse-inloggning</h1>
  
  <form id="login-form">
    <div style="margin-bottom: 1rem;">
      <label for="email" style="display: block; margin-bottom: 0.5rem; font-weight: bold;">E-post</label>
      <input type="email" id="email" required style="width: 100%; padding: 0.75rem; border: 1px solid #ddd; border-radius: 4px; box-sizing: border-box;">
    </div>
    
    <div style="margin-bottom: 1rem;">
      <label for="password" style="display: block; margin-bottom: 0.5rem; font-weight: bold;">Lösenord</label>
      <input type="password" id="password" required style="width: 100%; padding: 0.75rem; border: 1px solid #ddd; border-radius: 4px; box-sizing: border-box;">
    </div>
    
    <div id="error" style="display: none; color: red; margin: 1rem 0;"></div>
    <div id="success" style="display: none; color: green; margin: 1rem 0;"></div>
    
    <button type="submit" style="width: 100%; padding: 0.75rem; background-color: #2e6e65; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 1rem; margin-bottom: 1rem;">Logga in</button>
  </form>
  
  <div id="status" style="padding: 1rem; background-color: #f5f5f5; border-radius: 4px; font-size: 0.875rem;"></div>
</div>

<!-- Firebase SDK -->
<script src="https://www.gstatic.com/firebasejs/9.19.1/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.19.1/firebase-auth-compat.js"></script>

<script>
    // Uppdatera status för användaren
    function updateStatus(message) {
      document.getElementById('status').textContent = message
      console.log(message)
    }
    
    // Visa fel
    function showError(message) {
      const errorElement = document.getElementById('error')
      errorElement.textContent = message
      errorElement.style.display = 'block'
      document.getElementById('success').style.display = 'none'
    }
    
    // Visa framgång
    function showSuccess(message) {
      const successElement = document.getElementById('success')
      successElement.textContent = message
      successElement.style.display = 'block'
      document.getElementById('error').style.display = 'none'
    }
    
    // När sidan har laddats
    document.addEventListener('DOMContentLoaded', function() {
      updateStatus('Sidan laddad. Initierar Firebase...')
      
      // Firebase-konfiguration
      const firebaseConfig = {
        apiKey: "<%= process.env.FIREBASE_API_KEY %>",
        authDomain: "<%= process.env.FIREBASE_AUTH_DOMAIN %>",
        projectId: "<%= process.env.FIREBASE_PROJECT_ID %>",
        storageBucket: "<%= process.env.FIREBASE_STORAGE_BUCKET %>",
        messagingSenderId: "<%= process.env.FIREBASE_MESSAGING_SENDER_ID %>",
        appId: "<%= process.env.FIREBASE_APP_ID %>"
      }
      
      // Initiera Firebase
      try {
        updateStatus('Försöker initiera Firebase...')
        firebase.initializeApp(firebaseConfig)
        updateStatus('Firebase initierad. Redo för inloggning.')
      } catch (error) {
        updateStatus('Fel vid initiering av Firebase: ' + error.message)
        showError('Kunde inte ansluta till autentiseringstjänsten: ' + error.message)
        return
      }
      
      // Hantera inloggningsformulär
      const loginForm = document.getElementById('login-form')
      
      loginForm.addEventListener('submit', async function(event) {
        event.preventDefault()
        
        // Rensa eventuella tidigare felmeddelanden
        document.getElementById('error').style.display = 'none'
        document.getElementById('success').style.display = 'none'
        
        // Hämta inloggningsuppgifter
        const email = document.getElementById('email').value
        const password = document.getElementById('password').value
        
        if (!email || !password) {
          showError('Ange både e-post och lösenord')
          return
        }
        
        updateStatus('Försöker logga in...')
        
        try {
          // Försök logga in med Firebase Auth
          const userCredential = await firebase.auth().signInWithEmailAndPassword(email, password)
          updateStatus('Inloggningen lyckades! Hämtar token...')
          
          // Hämta användarens ID-token
          const idToken = await userCredential.user.getIdToken()
          updateStatus('Token hämtad. Skickar till servern...')
          
          // Skicka token till servern för att skapa en session
          const response = await fetch('/admin/login', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              idToken: idToken,
              email: email
            })
          })
          
          updateStatus('Serversvar mottaget.')
          
          // Hantera serverns svar
          if (response.ok) {
            const data = await response.json()
            
            if (data.success) {
              updateStatus('Inloggning framgångsrik! Omdirigerar...')
              showSuccess('Inloggningen lyckades! Omdirigerar...')
              
              // Kort fördröjning innan omdirigering
              setTimeout(function() {
                console.log(data.redirect)
                window.location.replace(data.redirect.startsWith('/') ? data.redirect : '/' + data.redirect)
              }, 1000)
            } else {
              updateStatus('Serverfel vid inloggning: ' + (data.message || 'Okänt fel'))
              showError(data.message || 'Ett fel inträffade vid inloggning')
            }
          } else {
            updateStatus('HTTP-fel vid kommunikation med servern: ' + response.status)
            showError('Kunde inte ansluta till servern: ' + response.status)
          }
        } catch (error) {
          updateStatus('Inloggningsfel: ' + error.message)
          
          // Visa användarvänligt felmeddelande
          let errorMessage = 'Ett fel inträffade vid inloggning'
          
          if (error.code === 'auth/wrong-password' || error.code === 'auth/user-not-found') {
            errorMessage = 'Felaktigt användarnamn eller lösenord'
          } else if (error.code === 'auth/too-many-requests') {
            errorMessage = 'För många misslyckade inloggningsförsök. Försök igen senare'
          } else if (error.code === 'auth/network-request-failed') {
            errorMessage = 'Nätverksfel. Kontrollera din internetanslutning'
          }
          
          showError(errorMessage)
        }
      })
    })
  </script>
</body>
</html>
